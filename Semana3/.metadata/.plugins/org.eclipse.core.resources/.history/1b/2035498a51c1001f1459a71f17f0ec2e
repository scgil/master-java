package com.curso.principal;

import java.util.List;

import com.curso.dao.IPeliculaRepository;
import com.curso.dao.PeliculaRepositoryImpl;
import com.curso.modelo.Pelicula;

import jakarta.persistence.EntityManager;
import jakarta.persistence.EntityManagerFactory;
import jakarta.persistence.Persistence;

public class Main {

	public static void main(String[] args) {
		
		// Crear el EntityManagerFactory (esto carga la configuraci√≥n de persistence.xml)
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("videoclub");

        // Crear un EntityManager (esto es necesario para las operaciones de persistencia)
        EntityManager em = emf.createEntityManager();

        // Crear el repositorio, inyectando el EntityManager
        IPeliculaRepository libroRepository = new PeliculaRepositoryImpl(em);
        
		
		System.out.println("Todas las peliculas: ");
		List<Pelicula> peliculas1 = libroRepository.findAll();
		
		if(peliculas1.size()>0) {
			for(Pelicula p: peliculas1) {
				System.out.println(p);
			}
		}
		
		System.out.println("Peliculas por nombre director: ");
		
		
		List<Pelicula> peliculas2 = libroRepository.findByDirectorNombre();
		
		if(peliculas2.size()>0) {
			for(Pelicula p: peliculas2) {
				System.out.println(p);
			}
		}
		
		System.out.println("Peliculas por nombre director Like: ");
		List<Pelicula> peliculas3 = libroRepository.findByDirectorLikeNombre();
		
		if(peliculas3.size()>0) {
			for(Pelicula p: peliculas3) {
				System.out.println(p);
			}
		}
		
		System.out.println("Peliculas por nombre director In: ");

		List<Pelicula> peliculas4 = libroRepository.findByDirectorIn();
		
		if(peliculas4.size()>0) {
			for(Pelicula p: peliculas4) {
				System.out.println(p);
			}
		}
		
		System.out.println("Peliculas por precio:");
		pdao.findByPrecio();
		
		em.close();
        emf.close();

	}

}
