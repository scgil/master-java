package com.curso.repository;

import java.util.List;

import com.curso.model.Libro;

import jakarta.persistence.EntityManager;
import jakarta.transaction.Transactional;

public class LibroRepositoryImpl implements ILibroRepository {

    
    private EntityManager entityManager;

    // Constructor donde se inyecta el EntityManager
    public LibroRepositoryImpl(EntityManager entityManager) {
        this.entityManager = entityManager;
    }  

    // Guardar o actualizar un libro    
    
    @Transactional  //se usa para asegurar que las operaciones de persistencia se realizan 
    public Libro save(Libro libro) {
        if (entityManager.contains(libro) || libro.getIsbn() != null) {
            return entityManager.merge(libro);  // Si ya existe, hace un merge
        } else {
            entityManager.persist(libro);  // Si no existe, lo persiste
            return libro;
        }
    }


    // Obtener todos los libros
    public List<Libro> findAll() {
        return entityManager.createQuery("SELECT l FROM Libro l", Libro.class).getResultList();
    }
    
    // Obtener todos los libros de un mismo autor
    public List<Libro> findByAutor(String autor){
    	
    	TypedQuery<Libro> consulta = entityManager.createQuery("SELECT l FROM Libro l WHERE autor = :autor", Libro.class);
    	
    	return entityManager
    }


}